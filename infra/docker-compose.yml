version: "3.3"
services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    image: taeray/backend:v1.1
    # build:
    #   context: ../backend
    restart: always
    command: >
      sh -c "python manage.py collectstatic --noinput &&
              python manage.py migrate &&
              python manage.py populate_db &&
              gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"

    volumes:
      - backend_static:/app/backend_static/
      - media:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    image: taeray/frontend:v1.0
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.21.3
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ./data/certbot/conf:/etc/letsencrypt #
      - ./data/certbot/www:/var/www/certbot #
      - backend_static:/app/backend_static/:ro
      - media:/app/media/:ro
    depends_on:
      - backend
  certbot:
    image: certbot/certbot
    volumes:
       - ./data/certbot/conf:/etc/letsencrypt
       - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx


volumes:
  db:
  backend_static:
  media:
# #       
#       sh -c "python manage.py collectstatic --noinput &&
#               python manage.py migrate &&
#               python manage.py populate_db &&
#               gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"